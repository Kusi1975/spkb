{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kusi's Knowledgebase","text":"<p>This blog is a collection of useful things that I need in everyday work from time to time and maybe can help someone else.</p> <p> </p> <p> </p>"},{"location":"#sp20162019","title":"SP2016/2019","text":"<p>SharePoint</p> <p>SPFx</p> <p>PnP</p> <p>PowerShell</p>"},{"location":"#react","title":"React","text":"<p>React</p>"},{"location":"#azure","title":"Azure","text":"<p>VMs</p>"},{"location":"#power-platform","title":"Power Platform","text":"<p>Power Platform</p>"},{"location":"#m365","title":"M365","text":"<p>SPFx</p> <p>PnP</p> <p>PowerShell</p>"},{"location":"About/","title":"Kusi's Knowledge Base","text":""},{"location":"About/#about","title":"About","text":""},{"location":"About/#author","title":"Author","text":"<p>Markus K\u00f6nig, Senior Sharepoint/M365 Expert and Developer, Garaio AG, Bern, Switzerland</p>"},{"location":"About/links/","title":"Kusi's Knowledge Base","text":""},{"location":"About/links/#links","title":"Links","text":"<p>Roles KB</p>"},{"location":"Azure/VMs/","title":"Kusi's Knowledge Base","text":""},{"location":"Azure/VMs/#hyper-v-vm-to-azure","title":"Hyper-V VM to Azure","text":""},{"location":"Azure/VMs/#convert-vm-with-hyper-v-manager","title":"Convert VM with Hyper-V Manager","text":"<p>Open Hyper-V Manager</p> <p>Navigate to Actions / Edit Disk...</p> <p></p> <p>Convert</p> <p></p> <p>VHD</p> <p></p> <p>Fixed size</p> <p></p>"},{"location":"Azure/VMs/#prepare-vm","title":"Prepare VM","text":"<p>based on Microsoft Article</p> <p>Start the VM and install all Windows Updates and reboot</p> <p>After reboot start PowerShell:</p> <p>In Cmd:</p> <pre><code>sfc.exe /scannow\n\ndiskpart.exe\nsan policy=onlineall\nexit\n</code></pre> <pre><code>netsh.exe winhttp reset proxy\nSet-ItemProperty -Path HKLM:\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation -Name RealTimeIsUniversal -Value 1 -Type DWord -Force\nSet-Service -Name w32time -StartupType Automatic\npowercfg.exe /setactive SCHEME_MIN\npowercfg /setacvalueindex SCHEME_CURRENT SUB_VIDEO VIDEOIDLE 0\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name TEMP -Value \"%SystemRoot%\\TEMP\" -Type ExpandString -Force\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name TMP -Value \"%SystemRoot%\\TEMP\" -Type ExpandString -Force\nGet-Service -Name BFE, Dhcp, Dnscache, IKEEXT, iphlpsvc, nsi, mpssvc, RemoteRegistry | Where-Object StartType -ne Automatic | Set-Service -StartupType Automatic\nGet-Service -Name Netlogon, Netman, TermService | Where-Object StartType -ne Manual | Set-Service -StartupType Manual\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server' -Name fDenyTSConnections -Value 0 -Type DWord -Force\nSet-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services' -Name fDenyTSConnections -Value 0 -Type DWord -Force\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\Winstations\\RDP-Tcp' -Name PortNumber -Value 3389 -Type DWord -Force\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\Winstations\\RDP-Tcp' -Name LanAdapter -Value 0 -Type DWord -Force\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp' -Name UserAuthentication -Value 1 -Type DWord -Force\nSet-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services' -Name KeepAliveEnable -Value 1  -Type DWord -Force\nSet-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services' -Name KeepAliveInterval -Value 1  -Type DWord -Force\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\Winstations\\RDP-Tcp' -Name KeepAliveTimeout -Value 1 -Type DWord -Force\nSet-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services' -Name fDisableAutoReconnect -Value 0 -Type DWord -Force\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\Winstations\\RDP-Tcp' -Name fInheritReconnectSame -Value 1 -Type DWord -Force\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\Winstations\\RDP-Tcp' -Name fReconnectSame -Value 0 -Type DWord -Force\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\Winstations\\RDP-Tcp' -Name MaxInstanceCount -Value 4294967295 -Type DWord -Force\nif ((Get-Item -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp').Property -contains 'SSLCertificateSHA1Hash')\n{\nRemove-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp' -Name SSLCertificateSHA1Hash -Force\n}\nSet-NetFirewallProfile -Profile Domain, Public, Private -Enabled True\nEnable-PSRemoting -Force\nSet-NetFirewallRule -Name WINRM-HTTP-In-TCP, WINRM-HTTP-In-TCP-PUBLIC -Enabled True\nSet-NetFirewallRule -Group '@FirewallAPI.dll,-28752' -Enabled True\nSet-NetFirewallRule -Name FPS-ICMP4-ERQ-In -Enabled True\nNew-NetFirewallRule -DisplayName AzurePlatform -Direction Inbound -RemoteAddress 168.63.129.16 -Profile Any -Action Allow -EdgeTraversalPolicy Allow\nNew-NetFirewallRule -DisplayName AzurePlatform -Direction Outbound -RemoteAddress 168.63.129.16 -Profile Any -Action Allow\nchkdsk.exe /f\n</code></pre> <p>Reboot VM</p> <p>In Cmd:</p> <pre><code>bcdedit.exe /set \"{bootmgr}\" integrityservices enable\nbcdedit.exe /set \"{default}\" device partition=C:\nbcdedit.exe /set \"{default}\" integrityservices enable\nbcdedit.exe /set \"{default}\" recoveryenabled Off\nbcdedit.exe /set \"{default}\" osdevice partition=C:\nbcdedit.exe /set \"{default}\" bootstatuspolicy IgnoreAllFailures\nbcdedit.exe /set \"{bootmgr}\" displaybootmenu yes\nbcdedit.exe /set \"{bootmgr}\" timeout 5\nbcdedit.exe /set \"{bootmgr}\" bootems yes\nbcdedit.exe /ems \"{current}\" ON\nbcdedit.exe /emssettings EMSPORT:1 EMSBAUDRATE:115200\n</code></pre> <p>In PowerShell:</p> <pre><code>Set-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\CrashControl' -Name CrashDumpEnabled -Type DWord -Force -Value 2\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\CrashControl' -Name DumpFile -Type ExpandString -Force -Value \"%SystemRoot%\\MEMORY.DMP\"\nSet-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\CrashControl' -Name NMICrashDump -Type DWord -Force -Value 1\n$key = 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\\LocalDumps'\nif ((Test-Path -Path $key) -eq $false) {(New-Item -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting' -Name LocalDumps)}\nNew-ItemProperty -Path $key -Name DumpFolder -Type ExpandString -Force -Value 'C:\\CrashDumps'\nNew-ItemProperty -Path $key -Name CrashCount -Type DWord -Force -Value 10\nNew-ItemProperty -Path $key -Name DumpType -Type DWord -Force -Value 2\nSet-Service -Name WerSvc -StartupType Manual\nwinmgmt.exe /verifyrepository\n</code></pre> <p>Make sure no other applications than TermService are using port</p> <pre><code>netstat.exe -anob\n</code></pre> <p>In CMD:</p> <pre><code>mmc.exe\n</code></pre> <p>File / Add or Remove Snap-ins Add Group Policy Object Editor for Local Computer Navigate to Configuration\\Windows Settings\\Security Settings\\Local Policies\\User Rights Assignment</p> <p>Check they're not blocked:</p> <pre><code>Deny access to this computer from the network\n</code></pre> <pre><code>Deny log on through Remote Desktop Services\n</code></pre> <p>Check the:</p> <pre><code>Access this computer from the network\n</code></pre> <p>that the following groups should be listet:</p> <ul> <li>Administrators</li> <li>Backup Operators</li> <li>Everyone</li> <li>Users</li> </ul>"},{"location":"Azure/VMs/#upload-vm-disk","title":"Upload VM Disk","text":"<p>The Subscription must have Microsoft.Network and Microsoft.Compute registered under Resource providers</p> <p>Open in Browser Azure Portal</p> <ul> <li>Create a Ressource \"Storage Account\"</li> </ul> <p></p> <p></p> <p>Download Link and choose the OS</p> <p></p> <p>Install \"Microsoft Azure Storage Explorer\" and start it.</p> <p></p> <p>Select the file, enter a name and change account type to \"Standard SSD\" and click \"Create\" to upload the VM. This create a Disk in Azure after upload.</p> <p></p>"},{"location":"Azure/VMs/#create-vm-from-a-vm-disk","title":"Create VM from a VM Disk","text":"<p>Open in Browser Azure Portal</p> <ul> <li>Navigate to the Disk and Create a Virtual Computer on the Disk</li> </ul> <p></p>"},{"location":"Azure/VMs/#first-run-in-azure","title":"First Run in Azure","text":"<p>In PowerShell:</p> <pre><code>Set-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management' -Name PagingFiles -Value 'D:\\pagefile.sys' -Type MultiString -Force\n</code></pre> <p>In Azure Portal Navigate to the VM Navigate to Oveview and Shutdown the VM Navigate to Auto-shutdown set Enabled to on and define a Time and click on Save.</p>"},{"location":"Azure/VMs/#create-a-snapshot-from-a-vm","title":"Create a Snapshot from a VM","text":"<p>In Azure:</p> <ul> <li>Navigate to the Disk and create a Snapshot</li> </ul> <p></p> <ul> <li>Make a Full Snapshot and change storage type to \"Standard HDD\"</li> </ul> <p></p>"},{"location":"Azure/VMs/#create-a-vm-from-a-snapshot","title":"Create a VM from a Snapshot","text":"<ul> <li>Navigate to the Snapshot and create a Disk</li> </ul> <p>Change storage type to \"Standard SSD\"</p> <p></p> <ul> <li>Naviagte to the Disk and create a VM</li> </ul> <p></p>"},{"location":"Azure/VMs/#startstop-vm","title":"Start/Stop VM","text":"<p>Create resource \"Start/Stop VMs during off hours - V2\"</p> <p></p> <p>Edit Logic App</p> <p></p> <p>Show Code View</p> <p></p> <p>Then \"Save\" it and wit \"Run trigger\" it can run it on time.</p> <p>Enable Logic App</p> <p></p> <p>Example Logic App ..._Scheduled_start</p> <pre><code>{\n    \"definition\": {\n        \"$schema\": \"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#\",\n        \"actions\": {\n            \"Function-Catch\": {\n                \"actions\": {\n                    \"Terminate\": {\n                        \"inputs\": {\n                            \"runError\": {\n                                \"code\": \"@{outputs['Scheduled']('statusCode')}\",\n                                \"message\": \"@{body('Scheduled')}\"\n                            },\n                            \"runStatus\": \"Failed\"\n                        },\n                        \"runAfter\": {},\n                        \"type\": \"Terminate\"\n                    }\n                },\n                \"runAfter\": {\n                    \"Function-Try\": [\n                        \"Failed\",\n                        \"Skipped\",\n                        \"TimedOut\"\n                    ]\n                },\n                \"type\": \"Scope\"\n            },\n            \"Function-Success\": {\n                \"actions\": {},\n                \"runAfter\": {\n                    \"Function-Try\": [\n                        \"Succeeded\"\n                    ]\n                },\n                \"type\": \"Scope\"\n            },\n            \"Function-Try\": {\n                \"actions\": {\n                    \"Scheduled\": {\n                        \"inputs\": {\n                            \"body\": {\n                                \"Action\": \"start\",\n                                \"EnableClassic\": false,\n                                \"RequestScopes\": {\n                                    \"ExcludedVMLists\": [],\n                                    \"VMLists\": [\n                                        \"/subscriptions/[Subscription-ID]/resourceGroups/[Resource group name]/providers/Microsoft.Compute/virtualMachines/[VM Name]\"\n                                    ]\n                                }\n                            },\n                            \"function\": {\n                                \"id\": \"/subscriptions/[Subscription-ID]/resourceGroups/[Resource group name]/providers/Microsoft.Web/sites/[FunctionName]/functions/Scheduled\"\n                            }\n                        },\n                        \"runAfter\": {},\n                        \"type\": \"Function\"\n                    }\n                },\n                \"runAfter\": {},\n                \"type\": \"Scope\"\n            }\n        },\n        \"contentVersion\": \"1.0.0.0\",\n        \"parameters\": {},\n        \"triggers\": {\n            \"Recurrence\": {\n                \"evaluatedRecurrence\": {\n                    \"frequency\": \"Week\",\n                    \"interval\": 1,\n                    \"schedule\": {\n                        \"hours\": [\n                            \"8\"\n                        ],\n                        \"minutes\": [\n                            0\n                        ],\n                        \"weekDays\": [\n                            \"Saturday\"\n                        ]\n                    },\n                    \"timeZone\": \"W. Europe Standard Time\"\n                },\n                \"recurrence\": {\n                    \"frequency\": \"Week\",\n                    \"interval\": 1,\n                    \"schedule\": {\n                        \"hours\": [\n                            \"8\"\n                        ],\n                        \"minutes\": [\n                            0\n                        ],\n                        \"weekDays\": [\n                            \"Saturday\"\n                        ]\n                    },\n                    \"timeZone\": \"W. Europe Standard Time\"\n                },\n                \"type\": \"Recurrence\"\n            }\n        }\n    },\n    \"parameters\": {}\n}</code></pre> <p>Example Logic App ..._Scheduled_stop</p> <pre><code>{\n    \"definition\": {\n        \"$schema\": \"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#\",\n        \"actions\": {\n            \"Function-Catch\": {\n                \"actions\": {\n                    \"Terminate\": {\n                        \"inputs\": {\n                            \"runError\": {\n                                \"code\": \"@{outputs['Scheduled']('statusCode')}\",\n                                \"message\": \"@{body('Scheduled')}\"\n                            },\n                            \"runStatus\": \"Failed\"\n                        },\n                        \"runAfter\": {},\n                        \"type\": \"Terminate\"\n                    }\n                },\n                \"runAfter\": {\n                    \"Function-Try\": [\n                        \"Failed\",\n                        \"Skipped\",\n                        \"TimedOut\"\n                    ]\n                },\n                \"type\": \"Scope\"\n            },\n            \"Function-Success\": {\n                \"actions\": {},\n                \"runAfter\": {\n                    \"Function-Try\": [\n                        \"Succeeded\"\n                    ]\n                },\n                \"type\": \"Scope\"\n            },\n            \"Function-Try\": {\n                \"actions\": {\n                    \"Scheduled\": {\n                        \"inputs\": {\n                            \"body\": {\n                                \"Action\": \"stop\",\n                                \"EnableClassic\": false,\n                                \"RequestScopes\": {\n                                    \"ExcludedVMLists\": [],\n                                    \"VMLists\": [\n                                        \"/subscriptions/[Subscription-ID]/resourceGroups/[Resource group name]/providers/Microsoft.Compute/virtualMachines/[VM Name]\"\n                                    ]\n                                }\n                            },\n                            \"function\": {\n                                \"id\": \"/subscriptions/[Subscription-ID]/resourceGroups/[Resource group name]/providers/Microsoft.Web/sites/[FunctionName]/functions/Scheduled\"\n                            }\n                        },\n                        \"runAfter\": {},\n                        \"type\": \"Function\"\n                    }\n                },\n                \"runAfter\": {},\n                \"type\": \"Scope\"\n            }\n        },\n        \"contentVersion\": \"1.0.0.0\",\n        \"parameters\": {},\n        \"triggers\": {\n            \"Recurrence\": {\n                \"evaluatedRecurrence\": {\n                    \"frequency\": \"Week\",\n                    \"interval\": 1,\n                    \"schedule\": {\n                        \"hours\": [\n                            \"12\"\n                        ],\n                        \"minutes\": [\n                            0\n                        ],\n                        \"weekDays\": [\n                            \"Sunday\"\n                        ]\n                    },\n                    \"timeZone\": \"W. Europe Standard Time\"\n                },\n                \"recurrence\": {\n                   \"frequency\": \"Week\",\n                    \"interval\": 1,\n                    \"schedule\": {\n                        \"hours\": [\n                            \"12\"\n                        ],\n                        \"minutes\": [\n                            0\n                        ],\n                        \"weekDays\": [\n                            \"Sunday\"\n                        ]\n                    },\n                    \"timeZone\": \"W. Europe Standard Time\"\n                },\n                \"type\": \"Recurrence\"\n            }\n        }\n    },\n    \"parameters\": {}\n}</code></pre>"},{"location":"M365/PnP/","title":"Kusi's Knowledge Base","text":""},{"location":"M365/PnP/#m365-pnp","title":"M365 PnP","text":""},{"location":"M365/PowerShell/","title":"Kusi's Knowledge Base","text":""},{"location":"M365/PowerShell/#m365-powershell","title":"M365 PowerShell","text":""},{"location":"M365/SPFx/","title":"Kusi's Knowledge Base","text":""},{"location":"M365/SPFx/#m365-spfx","title":"M365 SPFx","text":""},{"location":"PowerPlatform/","title":"Kusi's Knowledge Base","text":""},{"location":"PowerPlatform/#powerplatform","title":"PowerPlatform","text":""},{"location":"React/","title":"Kusi's Knowledge Base","text":""},{"location":"React/#react","title":"React","text":""},{"location":"React/#promise","title":"Promise","text":"<p>Wait on Promise from Sub Async functions in a loop.</p> <pre><code>    public static async getItemNamesAsync(itemids: number[]\nsiteUrl: string, spHttpClient: SPHttpClient): Promise&lt;string[]&gt; {\nreturn new Promise&lt;string[]&gt;(resolve =&gt; {\nconst itemsDetail: string[] = [];\nconst allPromises: Promise&lt;string&gt;[] = [];\nthis.getItemsAsync(itemids).then((items) =&gt; {\nfor (const item of items) {\nallPromises.push(this.getDetailInfoAsync(item.id, siteUrl, spHttpClient));\n}\nPromise.all(allPromises).then((all: string[]) =&gt; {\nall.forEach(i =&gt; {\nitemsDetail.push(i);\n});\nresolve(itemsDetail);\n});\n});\n});\n}\n</code></pre>"},{"location":"onPrem/PnP/","title":"Kusi's Knowledge Base","text":""},{"location":"onPrem/PnP/#onprem-pnp","title":"OnPrem PnP","text":""},{"location":"onPrem/PnP/#install-pnp-module","title":"Install PnP Module","text":"<pre><code>Install-Module SharePointPnPPowerShell2016\n</code></pre>"},{"location":"onPrem/PnP/#update-pnp-module","title":"Update PnP Module","text":"<pre><code>Update-Module SharePointPnPPowerShell*\n</code></pre>"},{"location":"onPrem/PnP/#get-pnp-module","title":"Get PnP Module","text":"<pre><code>Get-Module SharePointPnPPowerShell* -ListAvailable | Select-Object Name,Version | Sort-Object Version -Descending\n</code></pre>"},{"location":"onPrem/PowerShell/","title":"Kusi's Knowledge Base","text":""},{"location":"onPrem/PowerShell/#onprem-powershell","title":"OnPrem PowerShell","text":""},{"location":"onPrem/PowerShell/#update-content-database","title":"Update Content Database","text":"<pre><code>Get-SPContentDatabase |% { Upgrade-SPContentDatabase -Identity $_.Id -Confirm:$false }\n</code></pre>"},{"location":"onPrem/PowerShell/#update-ca-content-database","title":"Update CA Content Database","text":"<pre><code>$wa = Get-SPWebApplication -IncludeCentralAdministration | Where { $_.DefaultServerComment -eq \"SharePoint Central Administration v4\"}\nGet-SPContentDatabase -WebApplication $wa |% { Upgrade-SPContentDatabase -Identity $_.Id -Confirm:$false }\n</code></pre>"},{"location":"onPrem/PowerShell/#new-developer-certificate","title":"New Developer Certificate","text":"<pre><code>Import-Module WebAdministration\nSet-Location IIS:\\SslBindings\nNew-WebBinding -Name \"Default Web Site\" -IP \"*\" -Port 443 -Protocol https\n$c = New-SelfSignedCertificate -DnsName *.myexample.com,*.my.com -CertStoreLocation cert:\\LocalMachine\\My\n</code></pre> <p>Open mmc.exe and add Server Certificate</p> <p>Copy New Certificate from Personal to Trusted Root Certifiaction Authorities</p> <p>Open IIS and change the Binding Certificate</p>"},{"location":"onPrem/PowerShell/#error-cannot-be-loaded-because-running-scripts-is-disabled-on-this-system","title":"Error: cannot be loaded because running scripts is disabled on this System","text":"<pre><code>Set-ExecutionPolicy -ExecutionPolicy Unrestricted\n</code></pre>"},{"location":"onPrem/PowerShell/#get-all-loaded-assemblies-in-powershell","title":"Get all loaded Assemblies in Powershell","text":"<pre><code>[System.AppDomain]::CurrentDomain.GetAssemblies() | Where-Object Location | Sort-Object -Property FullName | Select-Object -Property Name, Location, Version | Out-GridView\n</code></pre>"},{"location":"onPrem/SP/","title":"Kusi's Knowledge Base","text":""},{"location":"onPrem/SP/#sharepoint-2016-2019","title":"SharePoint 2016 / 2019","text":""},{"location":"onPrem/SP/#close-connection-to-reconnect-with-another-user","title":"Close Connection to reconnect with another user","text":"<pre><code>https:&lt;&gt;/_layouts/closeConnection.aspx?loginasanotheruser=true\n</code></pre>"},{"location":"onPrem/SP/#app-launcher","title":"App Launcher","text":"<pre><code>Enable-SPFeature -identity CustomTiles\n</code></pre> <p>Edit List on</p> <pre><code>https:&lt;&gt;/Lists/Custom Tiles\n</code></pre>"},{"location":"onPrem/SP/#mobile-view","title":"Mobile View","text":"<p>For a better mobile view feeling you can add in the Master Page in the Head Element.</p> <pre><code>&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n</code></pre>"},{"location":"onPrem/SPFx/","title":"Kusi's Knowledgebase","text":""},{"location":"onPrem/SPFx/#onprem-spfx","title":"OnPrem SPFx","text":""},{"location":"onPrem/SPFx/#spfx-introduction-manual","title":"SPFx Introduction Manual","text":"<p>Introduction</p> <p>Development environment</p> <p>Create a new project</p> <p>Project structure</p> <p>Migrate SPFx 2016 to 2019</p>"},{"location":"onPrem/SPFx/#gulp-serve-with-localizaion","title":"gulp serve with localizaion","text":"<pre><code>gulp serve --locale de-de\n</code></pre>"},{"location":"onPrem/SPFx/#gulp-dist-for-sp201619","title":"gulp dist for SP2016/19","text":"<p>gulp dist replace the steps:</p> <pre><code>gulp clean\ngulp build\ngulp bundle --ship\ngulp package-solution --ship\n</code></pre> <p>Install gulp-sequence</p> <pre><code>npm install gulp-sequence --save-dev\n</code></pre> <p>edit file gulpfile.js</p> <pre><code>'use strict';\nif (process.argv.indexOf('dist') !== -1){\nprocess.argv.push('--ship');\n}\nconst gulp = require('gulp');\nconst build = require('@microsoft/sp-build-web');\nconst gulpSequence = require('gulp-sequence');\nbuild.addSuppression(`Warning - [sass] The local CSS class 'ms-Grid' is not camelCase and will not be type-safe.`);\ngulp.task('dist', gulpSequence('clean', 'bundle', 'package-solution'));\nbuild.initialize(gulp);\n</code></pre>"},{"location":"onPrem/SPFx/#ui-fabric-icons","title":"UI Fabric Icons","text":"<p>https://uifabricicons.azurewebsites.net</p>"},{"location":"onPrem/SPFx/createProject/","title":"Kusi's SPFx Knowledgebase","text":""},{"location":"onPrem/SPFx/createProject/#create-a-new-project","title":"Create a new project","text":""},{"location":"onPrem/SPFx/createProject/#create-the-project-structure","title":"Create the project structure","text":"<p>A new project can be created with the Yeoman or another WebPart can be added to an existing project in the same way.</p> <p>Switch to the project folder in Powershell and call it up. Then select @microsoft/sharepoint as generator.</p> <p></p> <p>Enter a project name and then select for which SharePoint version a WebPart would like to be developed.</p> <p></p> <p>Choose whether to create the project in the current folder or in a subfolder.</p> <p></p> <p>After that you will be asked if you want to publish this package to all sites without \u00abAdd app\u00bb. (SP2019, online)</p> <p>After that you will be asked if this package needs rights to access web APIs. (On-line)</p> <p></p> <p>After that you will be asked what you want to create, the following is your choice.</p>"},{"location":"onPrem/SPFx/createProject/#webpart-sp2016-sp2019-online","title":"WebPart (SP2016, SP2019, Online)","text":"<p>These WebParts are available in both Classic and Modern design.</p> <pre>\nTip: There shouldn't be more than 10 WebParts in a package, because the creation gets slower and slower and from 10 it gets noticeably slower and makes debugging a bit more cumbersome. In business it doesn't matter.\n</pre>"},{"location":"onPrem/SPFx/createProject/#extension-sp2019-online","title":"Extension (SP2019, Online)","text":"<p>With Extension, components in Modern Page can be placed at predefined zones such as headers or footers. For example, you can render your own navigation or footer on all Modern Sites.</p>"},{"location":"onPrem/SPFx/createProject/#library-online","title":"Library (Online)","text":"<p>The Library option is available online, with which only released code can be referenced.</p>"},{"location":"onPrem/SPFx/createProject/#build-project","title":"Build project","text":"<p>The developer certificate must be installed for the first time:</p> <pre><code>gulp trust-dev-cert\n</code></pre> <p>If something went wrong with the installation of the developer certificate, this can be reversed and then installed again:</p> <pre><code>gulp untrust-dev-cert\ngulp trust-dev-cert\n</code></pre> <p>A package can be created with the following commands:</p> <p>Debug:</p> <pre><code>gulp clean\ngulp bundle\ngulp package-solution\n</code></pre> <p>Release:</p> <pre><code>gulp clean\ngulp bundle --ship\ngulp package-solution --ship\n</code></pre> <p>The package is then available under the &lt;Project path&gt;\\sharepoint\\solution folder.</p>"},{"location":"onPrem/SPFx/createProject/#debug-project","title":"Debug project","text":"<p>A service is started locally with the following command:</p> <pre><code>gulp serve --nobrowser\n</code></pre> <p>Depending on the language, debugging can be done with locale:</p> <pre><code>gulp serve \u2013-nobrowser --locale de-de\n</code></pre> <p>The current version of the directory under which the command was called is then available under the workbench link /_layouts/15/workbench.aspx. The workbench link can be appended behind any site url e.g.: https://mysp.microsoft.com/sites/News/_layouts/15/workbench.aspx in this example all lists, fields etc. are available to you which available at web https://mysp.microsoft.com/sites/News, but the code is the local unminified code.</p>"},{"location":"onPrem/SPFx/createProject/#create-app-catalog","title":"Create App Catalog","text":"<p>If there is still no AppCatalog for the existing WebApplication, this can be created in the Central Admin under Apps by selecting the WebApplication and clicking \"Create a new app catalog site\".</p> <p></p> <p></p>"},{"location":"onPrem/SPFx/createProject/#publish","title":"Publish","text":"<p>The package can then be uploaded to the AppCatalog under \"Apps for SharePoint\".</p> <p></p> <p>The package is then available as an installable app for all site collections and can be installed using \u00abAdd app\u00bb.</p>"},{"location":"onPrem/SPFx/createProject/#sp2016","title":"SP2016","text":"<p>With SP2016, the JavaScript files are still outside of the package, so a DocLib must be provided where the JS files can be stored. The App Catalog site is ideally suited, under which a DocLib can be created, e.g. with the name CDN, where a subfolder can then be created for each package, for example, to which the files can then be uploaded from the path: &lt;Project path&gt;/temp/deploy. So that SPFx can link to the correct folder, the cdnBasePath must be defined in the &lt;Project path&gt;/config/write-manifests.json file, e.g. /sites/appcatalog/cdn/myproject. The package can be found under &lt;Project path&gt;/sharepoint/solution.</p>"},{"location":"onPrem/SPFx/createProject/#sp2019","title":"SP2019","text":"<p>From SP2019 the JavaScript files are included in the package. The package can be found under &lt;Project path&gt;/sharepoint/solution.</p>"},{"location":"onPrem/SPFx/devenv/","title":"Kusi's SPFx Knowledgebase","text":""},{"location":"onPrem/SPFx/devenv/#development-environment","title":"Development environment","text":"<p>The development itself has no longer to be developed directly on the server as it used to be, but can also be done on a client.</p>"},{"location":"onPrem/SPFx/devenv/#nodejs","title":"Node.js","text":"<p>Node.js must be installed on the development environment. The setup for the respective version can be downloaded from https://nodejs.org/dist.</p>"},{"location":"onPrem/SPFx/devenv/#nuget-manager","title":"NuGet Manager","text":"<p>The NuGet Manager can be installed using Powershell:</p> <pre><code>Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force\n</code></pre>"},{"location":"onPrem/SPFx/devenv/#yeoman-gulp-und-microsoft-sharepoint-generator","title":"Yeoman, Gulp und Microsoft SharePoint Generator","text":"<p>Then the missing NPM packages can be installed using PowerShell:</p> <pre><code>npm install -g yo@3.1.1 gulp@4.0.2 @microsoft/generator-sharepoint@1.12.1\n</code></pre>"},{"location":"onPrem/SPFx/devenv/#visual-studio-code","title":"Visual Studio Code","text":"<p>You need Visual Studio Code for the development:</p> <p>https://code.visualstudio.com/download</p>"},{"location":"onPrem/SPFx/intro/","title":"Kusi's SPFx Knowledgebase","text":""},{"location":"onPrem/SPFx/intro/#introduction","title":"Introduction","text":"<p>In the past, if you wanted to build custom reusable WebParts, you had to write server code that had to be installed server-side directly on the server. Since SharePoint 2016 with Feature Pack 2, there is a possibility to package a Clientside WebPart that can be stored in the App Catalog Site Collection. If you have the appropriate rights, the package can be installed without having to connect directly to the server, and the package can also be replaced without provoking an app pool reset, meaning there is no down time. In this guide, I would like to offer you a \"step-by-step\" guide that will help you to create an SPFx package for SP2016, SP2019 or SharePoint Online.</p>"},{"location":"onPrem/SPFx/intro/#versions","title":"Versions","text":"<p>SPFx Version 1.1.0 is supplied with SharePoint Feature Pack 2 (corresponds to CU 09.17). SPFx 1.4.1 is included with SharePoint 2019/SE. SharePoint Online currently uses 1.16.1</p> SP2016 SP2019/SE SPOnline SPFx 1.1.0 1.4.1 1.16.1 Node.js 6.x/8.x 6.x/8.x 16.13+ NPM v3/v4 v3/v4 v5/v6/v7/v8 TypeScript 2.2.2 2.4.2 3.3 React 15.4.2 15.6.2 17.0.1 Yeoman 3.x 3.x 4.x Gulp 4.x 4.x 4.x microsoft/generator-sharepoint 1.16.1 1.16.1 1.16.1"},{"location":"onPrem/SPFx/migrate16to19/","title":"Kusi's SPFx Knowledgebase","text":""},{"location":"onPrem/SPFx/migrate16to19/#migrate-spfx-2016-to-2019","title":"Migrate SPFx 2016 to 2019","text":"<p>To migrate an SPFx package from 2016 to 2019, adjustments to certain files are necessary, after which only the package should be available instead of the old packages with the necessary JS files.</p>"},{"location":"onPrem/SPFx/migrate16to19/#file-customizations","title":"File Customizations","text":"<p>Make the red text changes to the 2016 solution and rebuild.</p>"},{"location":"onPrem/SPFx/migrate16to19/#configconfigjson","title":"config/config.json","text":"<pre><code>{\n  \"$schema\": \"https://developer.microsoft.com/json-schemas/spfx-build/config.2.0.schema.json\",\n  \"version\": \"2.0\",\n  \"bundles\": {\n    \"hello-world-web-part\": {\n      \"entries\"\"components\": [\n        {\n          \"entrypoint\": \"./lib/webparts/helloWorld/HelloWorldWebPart.js\",\n          \"manifest\": \"./src/webparts/helloWorld/HelloWorldWebPart.manifest.json\",\n          \"outputPath\": \"./dist/hello-world-web-part.js\"\n        }\n      ]\n    }\n  },\n  \"externals\": {},\n  \"localizedResources\": {\n    \"HelloWorldWebPartStrings\": \"lib/webparts/helloWorld/loc/{locale}.js\"\n...</code></pre>"},{"location":"onPrem/SPFx/migrate16to19/#configpackage-solutionjson","title":"config/package-solution.json","text":"<pre><code>...\n\"version\": \"1.0.0.0\",\n\"includeClientSideAssets\": true\n...</code></pre>"},{"location":"onPrem/SPFx/migrate16to19/#configwrite-manifestjson","title":"config/write-manifest.json","text":"<pre><code>...\n\"cdnBasePath\": \"&lt;!-- PATH TO CDN --&gt;\"\n...</code></pre>"},{"location":"onPrem/SPFx/migrate16to19/#yo-rcjson","title":".yo-rc.json","text":"<pre><code>...\n\"environment\": \"onprem19\"\n...</code></pre>"},{"location":"onPrem/SPFx/migrate16to19/#packagejson","title":"package.json","text":"<pre><code>...\n\"dependencies\": {\n    \"react\": \"15.6.2\",\n    \"react-dom\": \"15.6.2\",\n    \"@types/react\": \"15.6.6\",\n    \"@types/react-dom\": \"15.5.6\",\n    \"@types/react-addons-shallow-compare\": \"0.14.17\",\n    \"@types/react-addons-update\": \"0.14.14\",\n    \"@types/react-addons-test-utils\": \"0.14.15\",\n    \"@microsoft/sp-core-library\": \"~1.4.0\",\n    \"@microsoft/sp-webpart-base\": \"~1.4.0\",\n    \"@microsoft/sp-lodash-subset\": \"~1.4.0\",\n    \"@microsoft/sp-office-ui-fabric-core\": \"~1.4.0\",\n    ...\n  },\n  \"resolutions\": {\n    \"@types/react\": \"15.6.6\"\n  },\n  \"devDependencies\": {\n    \"@microsoft/sp-build-web\": \"~1.4.1\",\n    \"@microsoft/sp-module-interfaces\": \"~1.4.1\",\n    \"@microsoft/sp-webpart-workbench\": \"~1.4.1\",\n...</code></pre>"},{"location":"onPrem/SPFx/migrate16to19/#tsconfigjson","title":"tsconfig.json","text":"<pre><code>...\n    \"module\": \"commonjs\"\"esnext\",\n    \"moduleResolution\": \"node\",\n...\n    \"typeRoots\": [\n      \"./node_modules/@types\",\n      \"./node_modules/@microsoft\"\n    ],\n...</code></pre>"},{"location":"onPrem/SPFx/migrate16to19/#gulpfilejs","title":"gulpfile.js","text":"<pre><code>...\nconst gulpSequence = require('gulp-sequence');\nconst del = require('del');\n\ngulp.task('cleanup', function(){\n     return del(['dist/**','lib/**','release/**','sharepoint/**','temp/**'], {force:true});\n});\n...\ngulp.task('dist', gulpSequence('clean', 'cleanup', 'bundle', 'package-solution'));\n...</code></pre>"},{"location":"onPrem/SPFx/migrate16to19/#readmemd","title":"README.md","text":"<pre><code>## sp-2019\n...</code></pre>"},{"location":"onPrem/SPFx/projectStructure/","title":"Kusi's SPFx Knowledgebase","text":""},{"location":"onPrem/SPFx/projectStructure/#project-structure","title":"Project structure","text":""},{"location":"onPrem/SPFx/projectStructure/#package-configuration","title":"Package configuration","text":""},{"location":"onPrem/SPFx/projectStructure/#package-solution","title":"Package Solution","text":"<pre><code>Path: &lt;Projectpath&gt;/config/package-solution.json</code></pre> <p>The name and the name of the file can be adjusted in the package-solution.json file. The version can also be defined.</p>"},{"location":"onPrem/SPFx/projectStructure/#package","title":"Package","text":"<pre><code>Path: &lt;Projectpath&gt;/package.json</code></pre> <p>The package.json file also has the version, it should be the same as the version above.</p> <p>Additional modules that can be used in the package can be entered in the dependencies section. The same can be achieved with:</p> <pre><code>npm &lt;modulename&gt; --install \u2013save\n</code></pre> <p>In the devDependencies section, additional modules can be entered that are only used for development and should not be compiled into the package. The same can be achieved with:</p> <pre><code>npm &lt;modulename&gt; --install --save-dev\n</code></pre> <p>If the packages were added manually in the package.json file, the packages can be downloaded with the following command:</p> <pre><code>npm -i\n</code></pre>"},{"location":"onPrem/SPFx/projectStructure/#gulpfile","title":"Gulpfile","text":"<pre><code>Path: &lt;Projectpath&gt;/gulpfile.js</code></pre> <p>So that the package can be created directly using gulp dist, gulp-sequence must first be installed:</p> <pre><code>npm install gulp-sequence@^1.0.0 --save-dev\n</code></pre> <pre><code>'use strict';\nif (process.argv.indexOf('dist') !== -1){\nprocess.argv.push('--ship');\n}\nconst gulp = require('gulp');\nconst build = require('@microsoft/sp-build-web');\nconst gulpSequence = require('gulp-sequence');\nbuild.addSuppression(`Warning - [sass] The local CSS class 'ms-Grid' is not camelCase and will not be type-safe.`);\ngulp.task('dist', gulpSequence('clean', 'bundle', 'package-solution'));\nbuild.initialize(gulp);\n</code></pre> <p>Under SP2019 there was the problem that the package got bigger with each build. It is therefore advisable to delete the old temp files there:</p> <pre><code>'use strict';\nif (process.argv.indexOf('dist') !== -1){\nprocess.argv.push('--ship');\n}\nconst gulp = require('gulp');\nconst build = require('@microsoft/sp-build-web');\nconst gulpSequence = require('gulp-sequence');\nconst del = require('del');\ngulp.task('cleanup', function(){\nreturn del(['dist/**','lib/**','release/**','sharepoint/**','temp/**'], {force:true});\n});\nbuild.addSuppression(`Warning - [sass] The local CSS class 'ms-Grid' is not camelCase and will not be type-safe.`);\ngulp.task('dist', gulpSequence('clean', 'cleanup', 'bundle', 'package-solution'));\nbuild.initialize(gulp);\n</code></pre> <p>The release package can then be created using the following command:</p> <pre><code>gulp dist\n</code></pre>"},{"location":"onPrem/SPFx/projectStructure/#webpart","title":"WebPart","text":""},{"location":"onPrem/SPFx/projectStructure/#manifest","title":"Manifest","text":"<pre><code>Path: &lt;Projectpath&gt;/webparts/&lt;WebPartName&gt;/&lt;WebPartName&gt;WebPart.manifest.json</code></pre> <p>The groupid value can be a new GUID and given a name in the group value. This name is then used as a category in the classic design.</p> <p></p> <p>With the value officeFabricIconFontName the icon can be defined in modern design.</p> <p></p>"},{"location":"onPrem/SPFx/projectStructure/#styling","title":"Styling","text":"<pre><code>Path: &lt;Projectpath&gt;/webparts/&lt;WebPartName&gt;/components/&lt;WebPartName&gt;.module.scss</code></pre> <p>The styles can be defined in this file, they can be nested and then converted into a correct CSS when compiling. The name can then be accessed using styles.&lt;Name&gt;. Global CSS classes can be defined using global keyword.</p> <p>Example:</p> <pre><code>:global(#spPageCanvasContent .CanvasZone) {\nmax-width: unset;\n}\n</code></pre>"},{"location":"onPrem/SPFx/projectStructure/#interfaces","title":"Interfaces","text":"<pre><code>Path: &lt;Projectpath&gt;/webparts/&lt;WebPartName&gt;/components/I&lt;WebPartName&gt;.ts</code></pre> <p>This file contains the interfaces for this WebPart.</p> <p>Example:</p> <pre><code>export interface I&lt;WebPartName&gt;State {\nerror?: undefined;\nisLoaded?: boolean;\nitems?: IItem[];\nselectedItem?: IItem;\n}\nexport interface IItem {\nID: number;\nTitle: string;\n}\n</code></pre>"},{"location":"onPrem/SPFx/projectStructure/#properties","title":"Properties","text":"<pre><code>Path: &lt;Projectpath&gt;/webparts/&lt;WebPartName&gt;/components/I&lt;WebPartName&gt;Props.ts</code></pre> <p>Props contains global variables and properties from the settings panel Example:</p> <pre><code>import { SPHttpClient } from '@microsoft/sp-http';\nexport interface I&lt;WebPartName&gt;Props {\nsiteurl: string;\nspHttpClient: SPHttpClient;\n}\n</code></pre>"},{"location":"onPrem/SPFx/projectStructure/#init-file","title":"Init file","text":"<pre><code>Path: &lt;Projectpath&gt;/webparts/&lt;WebPartName&gt;/&lt;WebPartName&gt;WebPart.ts</code></pre> <p>The global values of props are defined here Example:</p> <pre><code>  public render(): void {\nconst element: React.ReactElement&lt;I&lt;WebPartName&gt;Props &gt; = React.createElement(\n&lt;WebPartName&gt;,\n{\nsiteurl: this.context.pageContext.web.absoluteUrl,\nspHttpClient: this.context.spHttpClient\n}\n);\nReactDom.render(element, this.domElement);\n}\n</code></pre>"},{"location":"onPrem/SPFx/projectStructure/#code","title":"Code","text":"<pre><code>Path: &lt;Projectpath&gt;/webparts/&lt;WebPartName&gt;/components/I&lt;WebPartName&gt;.tsx</code></pre> <p>Example:</p> <pre><code>import * as React from 'react';\nimport styles from './&lt;WebPartName&gt;.module.scss';\nimport { I&lt;WebPartName&gt;Props } from './I&lt;WebPartName&gt;Props';\nimport { SPHttpClient } from '@microsoft/sp-http';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react';\nimport { I&lt;WebPartName&gt;State, IItem } from './I&lt;WebPartName&gt;';\nexport default class &lt;WebPartName&gt; extends React.Component&lt;I&lt;WebPartName&gt;Props, I&lt;WebPartName&gt;State&gt; {\npublic constructor(props: I&lt;WebPartName&gt;Props) {\nsuper(props);\nthis.state = {\nerror: undefined,\nisLoaded: false,\nitems: [],\nselectedItem: undefined\n};\n}\npublic componentDidMount(): void {\nlet items: IItem[] = [];\nthis.props.spHttpClient.get(`${this.props.siteurl}/_api/web/lists/getbytitle('&lt;ListName&gt;')/Items` +\n`?$select=Id,Title`,\nSPHttpClient.configurations.v1)\n.then(resType =&gt; resType.json())\n.then(resType =&gt; {\nif (resType.value) {\nitems = resType.value;\n}\nthis.setState({\nitems: items,\nisLoaded: true\n});\n});\n}\npublic render(): React.ReactElement&lt;IKnowledgeBaseProps&gt; {\nconst { items, selectedItem, error, isLoaded } = this.state;\nlet retValue: JSX.Element = &lt;div&gt;{strings.NoData}&lt;/div&gt;;\nif (error) {\nretValue = &lt;div className={styles.error}&gt;{strings.Error}: {error}&lt;/div&gt;;\n} else if (!isLoaded) {\nif (SpinnerSize &amp;&amp; SpinnerSize.large) {\nretValue = &lt;div className={styles.loadingWrapper}&gt;\n&lt;Spinner size={SpinnerSize.large} label={strings.OnLoading} /&gt;\n&lt;/div&gt;;\n} else {\nretValue = &lt;div&gt;{strings.OnLoading}&lt;/div&gt;;\n}\n} else if (selectedItem) {\nretValue = &lt;div className={styles.container}&gt;\n&lt;div className={styles.grouptext}&gt;{selectedItem.Title}&lt;/div&gt;\n&lt;/div&gt;;\n} else {\nretValue = &lt;div className={styles.container}&gt;{items.map(g =&gt;\n&lt;div&gt;&lt;div className={styles.grouptext}&gt;{g.Title}&lt;/div&gt;&lt;/div&gt;\n)}\n&lt;/div&gt;;\n}\nreturn (\n&lt;div className={styles.KnowledgeBase}&gt;{retValue}&lt;/div&gt;\n);\n}\n}\n</code></pre>"}]}